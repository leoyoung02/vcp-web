import { Routes } from '@angular/router';
import { PageLayout } from '@lib/enums/page-layout.enum';
import { authGuard } from 'src/app/core/guards';
import { CustomTitleResolver } from '@lib/resolvers';

export const routes: Routes = [
    {
        path: 'auth',
        data: { layout: PageLayout.LeftBanner },
        loadChildren: async () => (await import('@pages/auth')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'sso/:token',
        data: { layout: PageLayout.LeftBanner },
        loadChildren: async () => (await import('@pages/sso')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'payment',
        data: { layout: PageLayout.Blank },
        loadChildren: async () => (await import('@pages/payment')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'general',
        data: { layout: PageLayout.Blank },
        loadChildren: async () => (await import('@pages/general')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'tiktok',
        data: { layout: PageLayout.Blank },
        loadChildren: async () => (await import('@pages/tiktok')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'share/event/:slug/:invite_guid',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/share/event-registration/event-registration.component')).EventRegistrationComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'event/:slug/:invite_guid',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/share/event-registration/event-registration.component')).EventRegistrationComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'confirm-attendance/:eventId/:eventTypeId/:userGuid',
        data: { layout: PageLayout.Blank, titleKey: 'Confirmar' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/confirm-attendance/confirm-attendance.component')).ConfirmAttendanceComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
        pathMatch: 'full',
    },
    {
        path: 'tiktok',
        data: { layout: PageLayout.Blank },
        loadChildren: async () => (await import('@pages/tiktok')).routes,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'share/event/:slug/:invite_guid',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/share/event-registration/event-registration.component')).EventRegistrationComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'event/:slug/:invite_guid',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/share/event-registration/event-registration.component')).EventRegistrationComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: 'confirm-attendance/:eventId/:eventTypeId/:userGuid',
        data: { layout: PageLayout.Blank, titleKey: 'Confirmar' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/confirm-attendance/confirm-attendance.component')).ConfirmAttendanceComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
        pathMatch: 'full',
    },
    {
        path: 'plan-registration/payment/:id/:typeId/:userId',
        data: { layout: PageLayout.Blank, titleKey: 'signup.checkout' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@features/plans/payment/payment.component')).PlanPaymentComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
        pathMatch: 'full',
    },
    {
        path: 'calendly',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/external-calendly/external-calendly.component')).ExternalCalendlyComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: '',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/home')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'new-home',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/home')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'users',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/user')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'settings',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/settings')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'search',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/search')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'dashboard/:mode',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@pages/dashboard')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'plans',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/plans')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'clubs',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/clubs')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'employmentchannel',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/job-offers')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'cityguide',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/city-guide')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'courses',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/courses')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'tutors',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/tutors')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'activity-feed',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/activity-feed')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'testimonials',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/testimonials')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'members',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/members')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'discounts',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/offers')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'services',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/servicios')).routes,
        canMatch: [authGuard()],
    },
    {
        path: 'blog',
        data: { layout: PageLayout.Main },
        loadChildren: async () => (await import('@features/blogs')).routes,
        canMatch: [authGuard()],
    },
    {
        path: ':slug/:invite_guid',
        data: { layout: PageLayout.Blank, titleKey: 'Registro' },
        title: CustomTitleResolver,
        loadComponent: async () => (await import('@pages/share/event-registration/event-registration.component')).EventRegistrationComponent,
        canMatch: [authGuard({ requiresAuthentication: false })],
    },
    {
        path: '**',
        data: { layout: PageLayout.Blank },
        loadComponent: async () => (await import('@pages/screens/not-found/not-found.component')).NotFoundComponent,
    },
];
